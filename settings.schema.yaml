$schema: http://json-schema.org/draft-07/schema#
$defs:
  Cookies:
    properties:
      name:
        default: token
        title: Name
        type: string
      domain:
        default: innohassle.ru
        title: Domain
        type: string
      allowed_domains:
        default:
        - innohassle.ru
        - api.innohassle.ru
        - localhost
        items:
          type: string
        title: Allowed Domains
        type: array
    title: Cookies
    type: object
  Database:
    description: PostgreSQL database settings.
    properties:
      uri:
        description: Database URI. If not set, will be generated from other settings
        title: Uri
        type: string
    required:
    - uri
    title: Database
    type: object
  Environment:
    enum:
    - development
    - production
    - testing
    title: Environment
    type: string
  MailingTemplate:
    properties:
      subject:
        default: "\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044F\
          \ \u0432 \u041A\u0438\u0431\u0435\u0440.\u0411\u0430\u0437\u0435"
        description: Subject of the email
        title: Subject
        type: string
      file:
        default: auth-code.jinja2
        description: Path to the template file (relative to static folder)
        title: File
        type: string
    title: MailingTemplate
    type: object
  Predefined:
    description: Predefined settings. Will be used in setup stage.
    properties:
      first_superuser_login:
        default: admin
        description: Login for the first superuser
        title: First Superuser Login
        type: string
      first_superuser_password:
        default: admin
        description: Password for the first superuser
        title: First Superuser Password
        type: string
      first_superuser_email:
        default: admin@admin
        description: Email for the first superuser
        title: First Superuser Email
        type: string
    title: Predefined
    type: object
  SMTP:
    properties:
      server:
        description: SMTP server (hostname)
        title: Server
        type: string
      port:
        default: 587
        description: SMTP port
        title: Port
        type: integer
      username:
        description: SMTP username (email)
        title: Username
        type: string
      password:
        description: SMTP password
        format: password
        title: Password
        type: string
        writeOnly: true
      mailing_template:
        allOf:
        - $ref: '#/$defs/MailingTemplate'
        description: Mailing template settings
      phishing_template:
        allOf:
        - $ref: '#/$defs/MailingTemplate'
        default:
          subject: "\u0412\u0430\u0448\u0438 \u0444\u0438\u043D\u0430\u043D\u0441\u043E\
            \u0432\u044B\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0432\
            \ \u043E\u043F\u0430\u0441\u043D\u043E\u0441\u0442\u0438!!!"
          file: phishing.jinja2
        description: Phishing template settings
    required:
    - server
    - username
    - password
    title: SMTP
    type: object
  StaticFiles:
    properties:
      mount_path:
        default: /static
        title: Mount Path
        type: string
      mount_name:
        default: static
        title: Mount Name
        type: string
      directory:
        default: static
        format: path
        title: Directory
        type: string
    title: StaticFiles
    type: object
description: Settings for the application.
properties:
  environment:
    allOf:
    - $ref: '#/$defs/Environment'
    default: development
    description: App environment flag
  app_root_path:
    default: ''
    description: Prefix for the API path (e.g. "/api/v0")
    title: App Root Path
    type: string
  database:
    allOf:
    - $ref: '#/$defs/Database'
    description: PostgreSQL database settings
  predefined:
    allOf:
    - $ref: '#/$defs/Predefined'
    description: Predefined settings
  smtp:
    allOf:
    - $ref: '#/$defs/SMTP'
    description: SMTP settings
  session_secret_key:
    description: Secret key for sessions middleware. Use 'openssl rand -hex 32' to
      generate keys
    format: password
    title: Session Secret Key
    type: string
    writeOnly: true
  jwt_private_key:
    description: Private key for JWT. Use 'openssl genrsa -out private.pem 2048' to
      generate keys
    format: password
    title: Jwt Private Key
    type: string
    writeOnly: true
  jwt_public_key:
    description: Public key for JWT. Use 'openssl rsa -in private.pem -pubout -out
      public.pem' to generate keys
    title: Jwt Public Key
    type: string
  static_files:
    allOf:
    - $ref: '#/$defs/StaticFiles'
    description: Static files settings
  cors_allow_origins:
    description: CORS origins, used by FastAPI CORSMiddleware
    items:
      type: string
    title: Cors Allow Origins
    type: array
  cookie:
    anyOf:
    - $ref: '#/$defs/Cookies'
    - type: 'null'
    description: Cookies settings
required:
- smtp
- session_secret_key
- jwt_private_key
- jwt_public_key
title: Settings
type: object
