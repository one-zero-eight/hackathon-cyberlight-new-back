"""personal_account

Revision ID: b2390175ad0f
Revises: 6e9e706e216c
Create Date: 2023-12-08 12:43:39.524102

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b2390175ad0f"
down_revision: Union[str, None] = "6e9e706e216c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "achievement",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("image", sa.String(), nullable=True),
        sa.Column("icon", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "battle_pass",
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "level",
        sa.Column("experience", sa.Integer(), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reward",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("content", sa.String(), nullable=False),
        sa.Column("type", sa.Enum("DEFAULT", name="rewardtype"), nullable=False),
        sa.Column("image", sa.String(), nullable=True),
        sa.Column("icon", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "battle_pass_levels",
        sa.Column("battle_pass_id", sa.Integer(), nullable=False),
        sa.Column("level_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["battle_pass_id"],
            ["battle_pass.id"],
        ),
        sa.ForeignKeyConstraint(
            ["level_id"],
            ["level.id"],
        ),
        sa.PrimaryKeyConstraint("battle_pass_id", "level_id"),
    )
    op.create_table(
        "level_rewards",
        sa.Column("level_id", sa.Integer(), nullable=False),
        sa.Column("reward_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["level_id"],
            ["level.id"],
        ),
        sa.ForeignKeyConstraint(
            ["reward_id"],
            ["reward.id"],
        ),
        sa.PrimaryKeyConstraint("level_id", "reward_id"),
    )
    op.create_table(
        "personal_account",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id"),
    )
    op.create_table(
        "personal_account_achievements",
        sa.Column("personal_account_id", sa.Integer(), nullable=False),
        sa.Column("achievement_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["achievement_id"],
            ["achievement.id"],
        ),
        sa.ForeignKeyConstraint(
            ["personal_account_id"],
            ["personal_account.user_id"],
        ),
        sa.PrimaryKeyConstraint("personal_account_id", "achievement_id"),
    )
    op.create_table(
        "personal_account_battle_passes",
        sa.Column("battle_pass_id", sa.Integer(), nullable=False),
        sa.Column("personal_account_id", sa.Integer(), nullable=False),
        sa.Column("experience", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["battle_pass_id"],
            ["battle_pass.id"],
        ),
        sa.ForeignKeyConstraint(
            ["personal_account_id"],
            ["personal_account.user_id"],
        ),
        sa.PrimaryKeyConstraint("battle_pass_id", "personal_account_id"),
    )
    op.create_table(
        "personal_account_rewards",
        sa.Column("reward_id", sa.Integer(), nullable=False),
        sa.Column("personal_account_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["personal_account_id"],
            ["personal_account.user_id"],
        ),
        sa.ForeignKeyConstraint(
            ["reward_id"],
            ["reward.id"],
        ),
        sa.PrimaryKeyConstraint("reward_id", "personal_account_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("personal_account_rewards")
    op.drop_table("personal_account_battle_passes")
    op.drop_table("personal_account_achievements")
    op.drop_table("personal_account")
    op.drop_table("level_rewards")
    op.drop_table("battle_pass_levels")
    op.drop_table("reward")
    op.drop_table("level")
    op.drop_table("battle_pass")
    op.drop_table("achievement")
    # ### end Alembic commands ###
